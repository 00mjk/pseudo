constants: []
custom_exceptions: []
definitions:
- block:
  - block:
    - pseudo_type: Int
      type: implicit_return
      value: {pseudo_type: Int, type: int, value: 1}
    otherwise:
      block:
      - pseudo_type: Int
        type: implicit_return
        value:
          left:
            args:
            - left: {name: n, pseudo_type: Int, type: local}
              op: '-'
              pseudo_type: Int
              right: {pseudo_type: Int, type: int, value: 1}
              type: binary_op
            function:
              name: fib
              pseudo_type: [Function, Int, Int]
              type: local
            pseudo_type: Int
            type: call
          op: +
          pseudo_type: Int
          right:
            args:
            - left: {name: n, pseudo_type: Int, type: local}
              op: '-'
              pseudo_type: Int
              right: {pseudo_type: Int, type: int, value: 2}
              type: binary_op
            function:
              name: fib
              pseudo_type: [Function, Int, Int]
              type: local
            pseudo_type: Int
            type: call
          type: binary_op
      pseudo_type: Void
      type: else_statement
    pseudo_type: Void
    test:
      left: {name: n, pseudo_type: Int, type: local}
      op: <=
      pseudo_type: Boolean
      right: {pseudo_type: Int, type: int, value: 1}
      type: comparison
    type: if_statement
  name: fib
  params:
  - {name: n, pseudo_type: Function, type: local}
  pseudo_type: [Function, Int, Int]
  return_type: Int
  type: function_definition
dependencies: []
main:
- args:
  - args:
    - {pseudo_type: Int, type: int, value: 4}
    function:
      name: fib
      pseudo_type: [Function, Int, Int]
      type: local
    pseudo_type: Int
    type: call
  function: display
  namespace: io
  pseudo_type: Void
  type: standard_call
type: module
